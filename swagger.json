{
  "openapi": "3.0.0",
  "info": {
    "title": "'To-Do List' API",
    "version": "1.0.0",
    "description": "API for managing to-dos and users"
  },
  "servers": [
    {
      "url": "http://localhost:4588"
    }
  ],
  "tags": [
    {
      "name": "todos",
      "description": "To-Dos Endpoins"
    },
    {
      "name": "users",
      "description": "Users Endpoints"
    }
  ],
  "paths": {
    "/todos": {
      "post": {
        "tags": [
          "todos"
        ],
        "summary": "Create a new To-Do",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "required": true,
          "description": "JWT Access Token"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "To-Do Created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "todo": {
                      "$ref": "#/components/schemas/todos"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Creating To-Do failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "todos"
        ],
        "summary": "Get all To-Dos with optional skip and limit query parameters",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "description": "Access Token"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "todos": {
                      "type": "array",
                      "$ref": "#/components/schemas/todos"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "patch": {
        "tags": [
          "todos"
        ],
        "summary": "Update a To-Do by ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT Access Token"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "To-Do Updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "todo": {
                      "$ref": "#/components/schemas/todos"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "To-Do's id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Updating To-Do failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "todos"
        ],
        "summary": "Delete a To-Do by ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT Access Token"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted Successfully.",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "To-Do's id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Deleting To-Do failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Register a new user",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "type": "string",
          "description": "JWT Access Token"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error. Faild to register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "validationErrors": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Registering user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "type": "string",
          "description": "JWT Access Token"
        },
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "users": {
                      "type": "array",
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT Access Token"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Updating user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "JWT Access Token"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Deleting user failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login a user",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "required": true,
          "description": "JWT Access Token"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucessful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/users"
                    },
                    "token": {
                      "type": "string"
                    },
                    "refresh-token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wrong username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "users/refreshtoken": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new access token",
        "parameters": {
          "name": "Authorization",
          "in": "header",
          "type": "string",
          "required": true,
          "description": "JWT Refresh Token"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful token creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Ivalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "todos": {
        "type": "object",
        "required": [
          "title",
          "userId"
        ],
        "properties": {
          "title": {
            "type": "string",
            "minlength": 3,
            "maxLength": 50,
            "example": "Study Math"
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "in progress",
              "done"
            ],
            "default": "new",
            "example": "in progress"
          },
          "userId": {
            "type": "ObjectId",
            "ref": "user",
            "example":"pwj83787fy73yr73"
          }
        }
      },
      "users": {
        "type": "object",
        "required": [
          "password",
          "username",
          "lastName",
          "firstName"
        ],
        "properties": {
          "password": {
            "type": "string",
            "example": "password123"
          },
          "username": {
            "type": "string",
            "required": true,
            "unique": true,
            "minlength": 8,
            "example": "menna_ahmed"
          },
          "firstName": {
            "type": "string",
            "minlength": 3,
            "maxLength": 15,
            "example": "Menna"
          },
          "lastName": {
            "type": "string",
            "minlength": 3,
            "maxLength": 15,
            "example": "Ahmed"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ],
            "default": "user",
            "example": "admin"
          },
          "refreshToken": {
            "type": "String"
          },
          "dob": {
            "type": "Date"
          }
        }
      }
    }
  }
}